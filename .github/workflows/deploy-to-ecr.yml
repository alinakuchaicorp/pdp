name: Deploy to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials using secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build and Tag Docker Image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          # Build the Docker image with the version tag
          docker build --no-cache -t pdp:$IMAGE_TAG -t pdp:latest .

      # Step 5: Push Docker Image to ECR
      - name: Push Docker image to ECR
        run: |
          # Push both the versioned and latest tags
          docker tag pdp:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:${{ github.sha }}
          docker tag pdp:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:latest

          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:latest


      # Step 6: SSH into EC2 instance and run the container
      - name: Deploy Docker Container to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            # 1. Log in to ECR with sudo
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | sudo docker login --username AWS --password-stdin \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

           # 2. Short pause to ensure credentials are registered
           sleep 2

           # 3. Remove any local copy of the image named :latest (optional but recommended)
           sudo docker rmi ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:latest || true

           # 4. Pull the latest image from ECR
           sudo docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:latest

           # 5. Stop and remove the existing container (if any)
           sudo docker stop pdp || true
           sudo docker rm pdp || true

           # 6. Run the container with the newly pulled image
           sudo docker run -d --name pdp -p 8080:80 \
             ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pdp:latest
